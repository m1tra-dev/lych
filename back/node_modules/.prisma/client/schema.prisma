generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id       Int       @id @default(autoincrement())
  category String
  products Product[]
}

model Product {
  id            Int         @id @default(autoincrement()) @map("id")
  parentId      Int?        @map("parent_id")
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")
  menuOffTheDay Boolean?    @map("menu_off_the_day")
  image         String?
  link          String?
  name          String
  description   String?
  price         String?
  category      Category?   @relation(fields: [parentId], references: [id])
  orderItems    OrderItem[]
}

model Order {
  id        Int             @id @default(autoincrement()) @map("id")
  createdAt DateTime        @default(now()) @map("created_at")
  updatedAt DateTime        @updatedAt @map("updated_at")
  status    OrderItemStatus @default(PENDING)

  items OrderItem[]

  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")
}

enum OrderItemStatus {
  PENDING
  PAYED
  SHIPPED
  DELIVERED
}

model OrderItem {
  id        Int      @id @default(autoincrement()) @map("id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  quantity Int

  order   Order? @relation(fields: [orderId], references: [id])
  orderId Int?   @map("order_id")

  product   Product? @relation(fields: [productId], references: [id])
  productId Int?     @map("product_id")
}

model User {
  id             Int      @id @default(autoincrement()) @map("id")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  email          String   @unique
  password       String
  isActivated    Boolean  @default(false)
  activationLink String   @unique
  name           String?
  orders         Order[]
}
